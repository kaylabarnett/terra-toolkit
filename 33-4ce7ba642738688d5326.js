(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{1110:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return d}));var i=n(13),c=n.n(i),o=n(27),a=n.n(o),r=(n(0),n(437)),s={};function d(e){var t=e.components,n=a()(e,["components"]);return Object(r.mdx)("wrapper",c()({},s,n,{components:t,mdxType:"MDXLayout"}),Object(r.mdx)("h1",{id:"terra-service"},"Terra Service"),Object(r.mdx)("p",null,"The Terra service integrates ",Object(r.mdx)("a",{parentName:"p",href:"https://github.com/dequelabs/axe-core"},"axe accessibility")," and screenshot comparison testing commands into the test environment. Invoking the axe engine will perform a static analysis of the entire document and dom structure."),Object(r.mdx)("p",null,"A list of available commands can be viewed ",Object(r.mdx)("a",{parentName:"p",href:"../about#test-utilities"},"here"),"."),Object(r.mdx)("h2",{id:"options"},"Options"),Object(r.mdx)("h3",{id:"selector"},"selector"),Object(r.mdx)("p",null,"An optional selector can be configured in the ",Object(r.mdx)("inlineCode",{parentName:"p"},"serviceOptions")," to specify the default element to be captured when taking a screenshot. Accessibility testing ignores this option and always tests the entire document."),Object(r.mdx)("p",null,"Type: ",Object(r.mdx)("inlineCode",{parentName:"p"},"string")),Object(r.mdx)("p",null,"Required: ",Object(r.mdx)("inlineCode",{parentName:"p"},"false")),Object(r.mdx)("p",null,"Default: ",Object(r.mdx)("inlineCode",{parentName:"p"},"[data-terra-test-content] *:first-child")),Object(r.mdx)("p",null,"Example:"),Object(r.mdx)("pre",null,Object(r.mdx)("code",{parentName:"pre",className:"language-js"},"// wdio.conf.js\nconst { config } = require('@cerner/terra-functional-testing');\n\nconfig.serviceOptions = {\n  selector: '#root',\n};\n\nexports.config = config;\n")))}d.isMDXComponent=!0}}]);