(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{1103:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return s}));var a=n(13),r=n.n(a),o=n(27),d=n.n(o),c=(n(0),n(437)),i={};function s(e){var t=e.components,n=d()(e,["components"]);return Object(c.mdx)("wrapper",r()({},i,n,{components:t,mdxType:"MDXLayout"}),Object(c.mdx)("h1",{id:"terra-cli"},"Terra CLI"),Object(c.mdx)("p",null,"Terra CLI is a command line builder that supports creating ",Object(c.mdx)("a",{parentName:"p",href:"https://github.com/yargs/yargs/blob/master/docs/advanced.md#commands"},"yargs commands")," via defining ",Object(c.mdx)("a",{parentName:"p",href:"https://github.com/yargs/yargs/blob/master/docs/advanced.md#providing-a-command-module"},"command modules"),". Currently, terra-cli searches for a ",Object(c.mdx)("inlineCode",{parentName:"p"},"terra-cli")," directory in a given dependency and assumes that all subdirectories are separate command modules defined via ",Object(c.mdx)("inlineCode",{parentName:"p"},"index.js")," files in those subdirectories."),Object(c.mdx)("h2",{id:"allow-list"},"Allow List"),Object(c.mdx)("p",null,"To limit who can create these commands, terra-cli currently uses an allow list to only search for the following dependencies:"),Object(c.mdx)("ul",null,Object(c.mdx)("li",{parentName:"ul"},"@cerner/terra-functional-testing"),Object(c.mdx)("li",{parentName:"ul"},"@cerner/terra-open-source-scripts")),Object(c.mdx)("h2",{id:"dependency-searching"},"Dependency Searching"),Object(c.mdx)("p",null,"The search paths that terra-cli uses to search for terra-cli commands includes (constrained by the ",Object(c.mdx)("a",{parentName:"p",href:"#allow-list"},"allow list")," mentioned above):"),Object(c.mdx)("ul",null,Object(c.mdx)("li",{parentName:"ul"},"The current project's src directory"),Object(c.mdx)("li",{parentName:"ul"},"The src directory within subdirectories of the packages directory if the current project is ",Object(c.mdx)("inlineCode",{parentName:"li"},"terra-toolkit")),Object(c.mdx)("li",{parentName:"ul"},"The lib directory within subdirectories of the node_modules directory")),Object(c.mdx)("p",null,"We use the src directory in the first two cases to allow for easier local development."),Object(c.mdx)("h2",{id:"example-command"},"Example command"),Object(c.mdx)("p",null,"If you want to create a command ",Object(c.mdx)("inlineCode",{parentName:"p"},"test"),", you should add a file at ",Object(c.mdx)("inlineCode",{parentName:"p"},"src/terra-cli/test/index.js")," within a dependency in the allowlist. This file should be set up to be copied but not transpiled over to the ",Object(c.mdx)("inlineCode",{parentName:"p"},"lib")," directory. The file should contain something similar to:"),Object(c.mdx)("pre",null,Object(c.mdx)("code",{parentName:"pre",className:"language-javascript"},"const test = {\n  command: 'test',\n  describe: 'Test command description',\n  builder: (yargs) => testOptionsBuilder,\n  handler: testHandler,\n};\n\nmodule.exports = test;\n")),Object(c.mdx)("p",null,"For more information on how to create these modules see the ",Object(c.mdx)("a",{parentName:"p",href:"https://github.com/yargs/yargs/blob/master/docs/advanced.md#providing-a-command-module"},"yargs documentation"),"."),Object(c.mdx)("p",null,"To run this command, you would execute:"),Object(c.mdx)("pre",null,Object(c.mdx)("code",{parentName:"pre",className:"language-sh"},"terra test <options>\n")))}s.isMDXComponent=!0}}]);